CMake_minimum_required(VERSION 3.5.1)
#set(CMAKE_SYSTEM_NAME Linux)
#set(CMAKE_C_COMPILER /home/linux/AM335X/gcc-arm-8.3-2019.03-x86_64-arm-linux-gnueabihf/bin/arm-linux-gnueabihf-gcc)
#set(CMAKE_CXX_COMPILER /home/linux/AM335X/gcc-arm-8.3-2019.03-x86_64-arm-linux-gnueabihf/bin/arm-linux-gnueabihf-g++)
set(CMAKE_SYSTEM_NAME Linux)
set(CMAKE_SYSTEM_PROCESSOR arm) 
set(CMAKE_C_COMPILER "arm-linux-gnueabihf-gcc")
set(CMAKE_CXX_COMPILER "arm-linux-gnueabihf-g++")
set(CMAKE_FIND_ROOT_PATH "...")
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
#
project(APP)
#add_definitions("-Wall -lpthread -g")  
#set(SRC_LIST main.c uart.c eeprom.c)
#include_directories([AFTER|BEFORE] [SYSTEM] dir1 [dir2 ...])
#link_directories(directory1 directory2 ...)
#link_libraries("/opt/MATLAB/R2012a/bin/glnxa64/libeng.so")
#target_link_libraries(targetlibrary1 <debug | optimized> library2 ..)
aux_source_directory(./app SRC_LIST)
set(CMAKE_BUILD_TYPE Release)
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
add_executable(fpga_load ${SRC_LIST})
target_link_libraries(fpga_load pthread)
#add share libraries
#link_directories(../dep/lib )
#link_directories(${PROJECT_BINARY_DIR}/lib )
#target_link_libraries(main pthread)
